<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INITIALIZE VARIABLES
tileSet = asset_get_index("bk_grassland" + string(floor(random(3)+1)));
tileHeight = 64;
tileWidth = 64;
tileDepth = -10000;
roomWidth = room_width / tileWidth;
roomHeight = room_height / tileHeight;

for (var Y = 0; Y &lt; roomHeight; Y++) {
    for (var X = 0; X &lt; roomWidth; X++) {
        grid[X, Y] = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GENERATE GENERAL LAYOUT
//index
//1 = grass
//2 = darkgrass
//3 = dirt
for (var Y = 0; Y &lt; roomHeight; Y++) {
    for (var X = 0; X &lt; roomWidth; X++) {
        if (X == 0 &amp;&amp; Y == 0) {
            grid[X, Y] = irandom(3) + 1;
        } else if (X == 0) {
            grid[X, Y] = scr_generateLayout(grid[X, Y-1]);
        } else if (Y == 0) {
            grid[X, Y] = scr_generateLayout(grid[X-1, Y]);
        } else {
            grid[X, Y] = scr_generateLayout(grid[X-1, Y-1]);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CREATE TILES
for (var Y = 0; Y &lt; roomHeight; Y++) {
    for (var X = 0; X &lt; roomWidth; X++) {
        ID = 0;
        switch (grid[X, Y]) {
            case 0: ID = 94; break;
            case 1: ID = 17; break;
            case 2: ID = 69; break;
            case 3: ID = 50; break;
        }
        var left = (ID % (background_get_width(tileSet) / tileWidth)) * tileWidth;
        var top = floor(ID / (background_get_height(tileSet) / tileHeight)) * tileHeight;
        tile_add(tileSet, left, top, tileWidth, tileHeight, X*tileWidth, Y*tileHeight, tileDepth);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
